<View id="50" did="0" type="LinearLayout">
<ppt>width=-1
height=-1
orientation=vertical</ppt>
<event></event>
</View>
<View id="51" did="50" type="LinearLayout">
<ppt>width=-1
height=37.2dp
orientation=vertical
background=black</ppt>
<event></event>
</View>
<View id="55" did="51" type="RelativeLayout">
<ppt>width=-1
height=-1</ppt>
<event></event>
</View>
<View id="56" did="55" type="LinearLayout">
<ppt>width=-1
height=-1
orientation=vertical</ppt>
<event></event>
</View>
<View id="57" did="56" type="TextView">
<ppt>width=-2
height=-1
text=23:59:59
gravity=center_vertical
textColor=#ffffffff
textStyle=bold
typeface=@fonts/HarmonyOS_Sans_Medium.ttf
textSize=14.5sp
layout_marginRight=9dp
layout_gravity=right</ppt>
<event><eventItme type="aftertextchanged">t()
{
  stop(1000)
  time(3,now)
  ufnsui()
  {
    us(57,"text",now)
  }
}</eventItme></event>
</View>
<View id="58" did="55" type="LinearLayout">
<ppt>width=-1
height=-1
orientation=vertical</ppt>
<event><eventItme type="clicki">end()</eventItme></event>
</View>
<View id="59" did="58" type="TextView">
<ppt>width=-2
height=-1
text=官方通知
gravity=center_vertical
textColor=#1E88E5
textStyle=bold
typeface=@fonts/HarmonyOS_Sans_Medium.ttf
textSize=14.5sp
layout_marginLeft=9dp</ppt>
<event></event>
</View>
<View id="52" did="50" type="LinearLayout">
<ppt>width=-1
height=-1
orientation=vertical
background=black</ppt>
<event></event>
</View>
<View id="54" did="52" type="RelativeLayout">
<ppt>width=-1
height=-1</ppt>
<event></event>
</View>
<View id="3" did="54" type="LinearLayout">
<ppt>width=-1
height=-1
orientation=vertical
</ppt>
<event></event>
</View>
<View id="77" did="3" type="RecyclerView">
<ppt>width=-1
height=-1
layout_gravity=center
overScrollMode=always</ppt>
<event></event>
</View>
<UIEventset><eventItme type="loading">//调整状态栏黑色
uycl("#000000", true)
swh("w",x)
swh("h",y)
//调整顶部字体间距
s(x*0.05,b)
us(59,"layout_marginleft",b+"dp")
us(57,"layout_marginright",b+"dp")
//检测是否是圆屏手表
f(x==y)
{
  us(57,"visibility","invisible")
  us(59,"layout_marginleft","0dp")
  us(59,"layout_gravity","center_horizontal")
}
else f()
{
}
//调整顶部状态栏
s(y*0.16,a)
us(51,"height",a+"dp")
//获取时间
time(3,now)
ufnsui()
{
 us(57,"text",now)
}
//调整布局
s(x*0.9,c)
us(77,"width",c+"dp")
us(77,"layout_margintop",b+"dp")
us(77,"layout_marginbottom",b+"dp")
f(x==y)
{
 s(x/1.414,aa)
 s(x-aa,bb)
 s(bb*0.5,cc)
 s(y*0.16,dd)
 f(dd&gt;=cc)
 {
 }
 else f()
 {
  s(cc-aa,ee)
  us(77,"layout_margintop",ee+"dp")
 }
 us(77,"layout_marginbottom",ee+"dp")
 us(77,"width",aa+"dp")
}
else f()
{
}</eventItme><eventItme type="loadingComplete">ss host = "后端接口"
t
{
f(host==null)
  {
    ufnsui()
    {
      fn MDtw.toast("请检查网络状态",1)
    }
  }
  else
  {
  json(host,joat)
  json(joat,"get","code",code)
  json(joat,"get","msg",msg)
  json(joat, "list", "data", list1)
  json(list1, "size", size1)
  w(size1 &gt; 0)
  {
    s-(1, size1)
    json(list1, "data", size1, jsonData)
    json(jsonData,"get","id",id)
    json(jsonData,"get","title",title)
    json(jsonData,"get","content",content)
    json(jsonData,"get","createTime",createTime)
    ula(list, -2=id, -1=jsonData, 3=title, 5=content ,4=createTime)
  }
  ufnsui()
  {
    f(code==200)
    {
      uls(77,list,"gftzlb.iyu",-1,-2)
    }
    else
    {      
      fn MDtw.toast("请稍候重试"+msg,1)
    }
  }
  }
}</eventItme></UIEventset>